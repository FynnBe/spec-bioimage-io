name: nN5
description: nN5 reader
format_version: 0.1.0
language: python
cite: []
authors:
    - Wei Ouyang
    - Florian Jug
documentation: nN5_reader.md
tags: []
# optional:
test_input: 
    uri: https://www.mydata.com/my_test_file.n5 # {source: https://www.mydata.com/my_test_file.n5, hash:sdlfjsldfj}
    output_shape: [1, 2, 256, 256]
test_output: file:./example.npy # {source: https://www.mydata.com/my_test_output.npy, hash: xdfsfsdfsfs}


dependencies: conda:./environment.yaml

outputs: any # if it's fixed, give the exact shape, e.g.: [1, 2, 256, 256]

source: core.readers.nN5 # return an iteratable and random accessible object with `length`, `position` and other properties
kwargs: {uri, output_shape}

# handle =  core.readers.nN5(uri=..., output_shape=[1,2,256, 256])
# batches, channels, width, height = handle.shape
# tensor_1 = handle.view(3, range(0,2), range(100, 356), range(110, 366))
# tensor_2 = handle.next()
