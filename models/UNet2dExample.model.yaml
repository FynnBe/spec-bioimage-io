# TODO discuss the depenendencies more closely

### keys shared with website rdf: https://github.com/bioimage-io/bioimage.io/blob/master/docs/resource-description-file.md

format_version: 0.3.0

name: UNet2dExample
description: A 2d U-Net trained on the DSB nucleus segmentation challenge.
authors:
    - Constantin Pape;@constantinpape
    - Fynn Beutenmueller

# we allow for multiple citations. Each citation contains TEXT, DOI and URL. One of DOI or URL needs to be given.
cite:
    - text: "Ronneberger, Olaf et al. U-net: Convolutional networks for biomedical image segmentation. MICCAI 2015."
      doi: https://doi.org/10.1007/978-3-319-24574-4_28
    - text: "2018 Data Science Bowl"
      doi: https://www.kaggle.com/c/data-science-bowl-2018

git_repo: https://github.com/bioimage-io/configuration/tree/master/models
tags: [unet2d, pytorch, nucleus-segmentation, dsb]
license: MIT

documentation: ./unet2d.md
covers: []
attachments: {}

### model spec specific keys:

# TODO physical scale of the data
inputs:
  - name: input
    data_type: float32
    data_range: [-inf, inf]
    axes: bcyx  # letters in axes in btczyx   # todo: discussion about NTCHWD versus btczyx
    shape: [1, 2, 512, 512]
    preprocessing:  # optional description of the input's preprocessing
      name: zero_mean_unit_variance  # name of preprocessing. Currently only zero_mean_unit_variance is supported
      kwargs:  # example kwargs for zero_mean_unit_variance
        mode: fixed           # mode in [fixed, per_dataset, per_sample]
        axes: xy              # subset of axes to normalize jointly, batch ('b') is not a valid axis key here!
        mean: [1.1, 2.2, 3.3] # mean if mode == fixed. Here it is a list (because in this example we assume a channel dimension of length c=2)
        std: [0.1, 0.2, 0.3]  # standard deviation if mode == fixed analogously to mean


outputs:
  - name: probabilities
    description: network probabilities in [0,1]  # optional description
    axes: bcyx
    data_type: float32
    data_range: [-inf, inf]
    halo: [0, 0, 32, 32]
    shape:
        reference_input: input
        scale: [1, 1, 1, 1]
        offset: [0, 0, 0, 0]


# language + framework specify runner
language: python

source: ./unet2d.py:UNet2d  # optional depending on weights_format
sha256: d6e2e4cf0562237ed0f8fbc8a518fe7047e8e75a15a8a64437bc38d7458f3687   # optional
kwargs: {input_channels: 1, output_channels: 1}
dependencies: conda:./environment.yaml

test_inputs:  # URI's to inputs (in order as specified in inputs) for a single test case
  - ./my_default_test_input.npy
test_outputs:  # analog to test_inputs
  - ./my_default_test_output.npy

weights:
  pyorch_state_dict:
    authors: ["author1", "author2"]  # only needs to be specified if the weight authors are different from the authors specified in the root
    source: https://zenodo.org/record/3446812/files/unet2d_weights.torch
    sha256: e4d3885bccbe41cbf6c1d825f3cd2b707c7021ead5593156007e407a16b27cf2
    timestamp: 2019-12-11T12:22:32Z  # ISO 8601
      

config: # optional
  ilastik:
    only_ilastik_knows_about: lazyflow
  # deepimagej:
  #  ij: deep-ij
