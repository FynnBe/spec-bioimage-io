authors:
- {name: Constantin Pape; @constantinpape}
cite:
- {text: training library, url: 'https://doi.org/10.5281/zenodo.5108853'}
- {text: architecture, url: 'https://doi.org/10.1007/978-3-319-24574-4_28'}
covers: [cover.jpg]
dependencies: conda:./environment.yaml
description: multi-tensor
documentation: documentation.md
format_version: 0.3.2
framework: pytorch
git_repo: https://github.com/constantinpape/torch-em.git
inputs:
- axes: bcyx
  data_range: [-.inf, .inf]
  data_type: float32
  name: input0
  preprocessing:
  - kwargs: {axes: cyx, mode: per_sample}
    name: zero_mean_unit_variance
  shape:
    min: [1, 1, 32, 32]
    step: [0, 0, 16, 16]
- axes: bcyx
  data_range: [-.inf, .inf]
  data_type: float32
  name: input1
  preprocessing:
  - kwargs: {axes: cyx, mode: per_sample}
    name: zero_mean_unit_variance
  shape:
    min: [1, 1, 32, 32]
    step: [0, 0, 16, 16]
kwargs: {depth: 3, in_channels: 2, initial_features: 16, out_channels: 2}
language: python
license: CC-BY-4.0
links: [ilastik/ilastik]
name: multi-tensor
outputs:
- axes: bcyx
  data_range: [-.inf, .inf]
  data_type: float32
  name: output0
  shape:
    offset: [0, 0, 0, 0]
    reference_input: input0
    scale: [1, 1, 1, 1]
- axes: bcyx
  data_range: [-.inf, .inf]
  data_type: float32
  name: output1
  shape:
    offset: [0, 0, 0, 0]
    reference_input: input1
    scale: [1, 1, 1, 1]
source: ./multi_tensor_unet.py:MultiTensorUNet
tags: [segmentation]
test_inputs: [test_input_0.npy, test_input_1.npy]
test_outputs: [test_output_0.npy, test_output_1.npy]
timestamp: '2021-09-13T11:31:59.520695'
type: model
weights:
  onnx: {opset_version: 12, sha256: 17e4e375b77989b0125a049a357cf9a04a5994de070aa67cbd4e41d3adb0894e,
    source: ./weights.onnx}
  pytorch_script: {sha256: e2012a8905915ac8c4e51fe1de10dd63b621e781b0e02b615e4a17b13fed894f,
    source: ./weights-torchscript.pt}
  pytorch_state_dict: {sha256: 82b725e1203b7543e139a7a31421cd5c0d7f2d8126843e5346438ef0cd27a232,
    source: ./weights.pt}
